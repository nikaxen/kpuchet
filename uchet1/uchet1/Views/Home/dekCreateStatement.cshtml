@model uchet1.Models.Statement
@using uchet1.DAO;

@{
    
    ViewBag.Title = "Создать новую ведомость";
}

<h2>Создать новую ведомость</h2>


@{
    RecordsDAO recordsDAO = new RecordsDAO();
    List<SelectListItem> PrepList = new List<SelectListItem>();
    List<SelectListItem> SubjectsList = new List<SelectListItem>();
    List<SelectListItem> StudGroupList = new List<SelectListItem>();

    foreach (var item in recordsDAO.ShowUsersByRole(3))
    {
        PrepList.Add(new SelectListItem() { Text = item.fio.ToString(), Value = item.Id.ToString() });
    }
    foreach (var item in recordsDAO.getAllSubjects())
    {
        SubjectsList.Add(new SelectListItem() { Text = item.subject_title.ToString(), Value = item.id_subject.ToString() });
    }
    foreach (var item in recordsDAO.dekGetAllStudentGroups())
    {
        StudGroupList.Add(new SelectListItem() { Text = item.studgroupname.ToString(), Value = item.studgroupid.ToString() });
    }
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>При создании ведомости, ей присвоится статус "opened" и она станет доступна преподавателю.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.subjtitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_subject, SubjectsList)
                @Html.ValidationMessageFor(model => model.id_subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prepname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_user, PrepList)
                @Html.ValidationMessageFor(model => model.id_user, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.studgroupname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idstudgroup, StudGroupList)
                @Html.ValidationMessageFor(model => model.idstudgroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("< Список ведомостей", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
